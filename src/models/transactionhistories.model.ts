import { FieldsType } from "@/types/types";
import { regexNumber, regexString } from "@/utils/regex";

export const fields: FieldsType = {
  transaction: {
    type: Number,
    fk: true,
    parent: "transactions",
    fkGet: true,
    search: false,
    select: true,
    required: true,
    unique: false,
    minLength: 1,
    maxLength: 15,
    regex: regexNumber,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  fromClient: {
    type: Number,
    fk: true,
    parent: "clients",
    fkGet: true,
    search: false,
    select: true,
    required: false, // nullable
    unique: false,
    minLength: 0,
    maxLength: 15,
    regex: regexNumber,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  toClient: {
    type: Number,
    fk: true,
    parent: "clients",
    fkGet: true,
    search: false,
    select: true,
    required: true,
    unique: false,
    minLength: 1,
    maxLength: 15,
    regex: regexNumber,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  fromStage: {
    type: Number,
    fk: true,
    parent: "stages",
    fkGet: true,
    search: false,
    select: true,
    required: false, // nullable
    unique: false,
    minLength: 0,
    maxLength: 15,
    regex: regexNumber,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  toStage: {
    type: Number,
    fk: true,
    parent: "stages",
    fkGet: true,
    search: false,
    select: true,
    required: true,
    unique: false,
    minLength: 1,
    maxLength: 15,
    regex: regexNumber,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  fromCurrency: {
    type: Number,
    fk: true,
    parent: "currencies",
    fkGet: true,
    search: false,
    select: true,
    required: false, // nullable
    unique: false,
    minLength: 0,
    maxLength: 15,
    regex: regexNumber,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  toCurrency: {
    type: Number,
    fk: true,
    parent: "currencies",
    fkGet: true,
    search: false,
    select: true,
    required: true,
    unique: false,
    minLength: 1,
    maxLength: 15,
    regex: regexNumber,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  changedBy: {
    type: Number,
    fk: true,
    parent: "users",
    fkGet: true,
    search: false,
    select: true,
    required: false, // nullable
    unique: false,
    minLength: 0,
    maxLength: 15,
    regex: regexNumber,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  name: {
    type: String,
    fk: false,
    parent: "",
    fkGet: false,
    search: false,
    select: true,
    required: true,
    unique: true,
    minLength: 1,
    maxLength: 191,
    regex: regexString,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
};
